SNAKE:
import pygame
import random
pygame.init()
screen = pygame.display.set_mode((600,600))


class Snake():
    def __init__(self,x,y):
        self.size = 1
        self.elements = [[x, y]]
        self.radius = 10
        self.dx = 5
        self.dy = 0
        self.is_add = False
        self.speed = 30

    def draw(self):
        for element in self.elements:
            pygame.draw.circle(screen, (255, 0 , 0), element, self.radius)

    def add_to_snake(self):
        self.size += 1
        self.elements.append([0,0])
        self.is_add = False
        if self.size % 3 == 0:
            self.speed += 10
    def move(self):
        if self.is_add:
            self.add_to_snake()
        
        for i in range(self.size - 1, 0, -1):
            self.elements[i][0] = self.elements[i - 1][0]
            self.elements[i][1] = self.elements[i-1][1]
        self.elements[0][0] += self.dx
        self.elements[0][1] += self.dy

    def eat(self, foodx, foody):
        x = self.elements[0][0]
        y = self.elements[0][1]
        if food.x <= x <= food.x + 20 and food.y <= y <= food.y + 20:
            return True
        else:
            return False


class Food:
    def __init__(self):
        self.x = random.randint(0, 600)
        self.y = random.randint(0, 600)
    def gen(self):
        self.x = random.randint(0, 600)
        self.y = random.randint(0, 600)
    def draw(self):
        pygame.draw.circle(screen, (255, 0, 0), (self.x,self.y), 6)
    


snake = Snake(100,100)
food = Food()
running = True

FPS = 30
d = 5

clock = pygame.time.Clock()
while running:
    clock.tick(snake.speed)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_ESCAPE:
                running = False
            if event.key == pygame.K_RIGHT:
                snake.dx = d
                snake.dy = 0
            if event.key == pygame.K_LEFT:
                snake.dx = -d
                snake.dy = 0
            if event.key == pygame.K_UP:
                snake.dx = 0
                snake.dy = -d
            if event.key == pygame.K_DOWN:
                snake.dx = 0
                snake.dy = d
            if event.key == pygame.K_SPACE:
                snake.is_add = True
    if snake.eat(food.x, food.y):
        snake.is_add = True
        food.gen()
    snake.move()
    screen.fill((0,0,0))
    snake.draw()
    food.draw()
    pygame.display.update()

pygame.quit()




PAINT
import pygame
import random
pygame.init()

def main():
    screen = pygame.display.set_mode((600, 600))
    mode = 'random'
    draw_on = False
    last_pos = (0, 0)
    colour = (255, 128, 0)
    radius = 1
    colours = {
        'red': (255, 0, 0),
        'blue': (0, 0, 255),
        'green': (0, 255, 0),
        'black': (0, 0, 0)

    }
    done = False
    while not done:
        pressed = pygame.key.get_pressed()
        alt_held = pressed[pygame.K_LALT] or pressed[pygame.K_RALT]
        ctrl_held = pressed[pygame.K_LCTRL] or pressed[pygame.K_RCTRL]

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_w and ctrl_held:
                    pass
                if event.key == pygame.K_F4 and alt_held:
                    pass
                if event.key == pygame.K_r:
                    mode = 'red'
                if event.key == pygame.K_b:
                    mode = 'blue'
                if event.key == pygame.K_g:
                    mode = 'green'
                if event.key == pygame.K_b:
                    mode = 'black'
                if event.key == pygame.K_DOWN:
                    radius -= 1
                if event.key == pygame.K_UP:
                    radius += 1
            if event.type == pygame.MOUSEBUTTONDOWN:
                if mode == 'random':
                    colour = (random.randrange(256),random.randrange(256),random.randrange(256))

                else:
                    colour = colours[mode]
                pygame.draw.circle(screen, colour, event.pos, radius)
                draw_on = True
            if event.type == pygame.MOUSEBUTTONUP:
                draw_on = False
            if event.type == pygame.MOUSEMOTION:
                if draw_on:
                    pygame.draw.line(screen, colour, last_pos, event.pos, radius)
                last_pos = event.pos
        pygame.display.flip()
    pygame.quit()
main()


Rush:
import pygame, sys
from pygame.locals import *
import random, time
 

pygame.init()
 
 
FPS = 60
FramePerSec = pygame.time.Clock()
 

BLUE  = (0, 0, 255)
RED   = (255, 0, 0)
GREEN = (0, 255, 0)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
 

SCREEN_WIDTH = 400
SCREEN_HEIGHT = 600
SPEED = 5
SCORE = 0
 

font = pygame.font.SysFont("Verdana", 60)
font_small = pygame.font.SysFont("Verdana", 20)
game_over = font.render("Game Over", True, BLACK)
 
background = pygame.image.load("AnimatedStreet.png")
 

DISPLAYSURF = pygame.display.set_mode((400,600))
DISPLAYSURF.fill(WHITE)
pygame.display.set_caption("Game")
 
class Enemy(pygame.sprite.Sprite):
      def __init__(self):
        super().__init__() 
        self.image = pygame.image.load("Enemy.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH-40), 0)  
 
      def move(self):
        global SCORE
        self.rect.move_ip(0,SPEED)
        if (self.rect.top > 600):
            SCORE += 1
            self.rect.top = 0
            self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)
 
 
class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__() 
        self.image = pygame.image.load("Player.png")
        self.rect = self.image.get_rect()
        self.rect.center = (160, 520)
        
    def move(self):
        pressed_keys = pygame.key.get_pressed()
       
         
        if self.rect.left > 0:
              if pressed_keys[K_LEFT]:
                  self.rect.move_ip(-5, 0)
        if self.rect.right < SCREEN_WIDTH:        
              if pressed_keys[K_RIGHT]:
                  self.rect.move_ip(5, 0)
                   
       
P1 = Player()
E1 = Enemy()
 

enemies = pygame.sprite.Group()
enemies.add(E1)
all_sprites = pygame.sprite.Group()
all_sprites.add(P1)
all_sprites.add(E1)
 
 
INC_SPEED = pygame.USEREVENT + 1
pygame.time.set_timer(INC_SPEED, 1000)
 

while True:
       
    
    for event in pygame.event.get():
        if event.type == INC_SPEED:
              SPEED += 0.5     
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
 
    DISPLAYSURF.blit(background, (0,0))
    scores = font_small.render(str(SCORE), True, BLACK)
    DISPLAYSURF.blit(scores, (10,10))
 
    
    for entity in all_sprites:
        DISPLAYSURF.blit(entity.image, entity.rect)
        entity.move()
 
    
    if pygame.sprite.spritecollideany(P1, enemies):
          pygame.mixer.Sound('crash.wav').play()
          time.sleep(0.5)
                    
          DISPLAYSURF.fill(RED)
          DISPLAYSURF.blit(game_over, (30,250))
           
          pygame.display.update()
          for entity in all_sprites:
                entity.kill() 
          time.sleep(2)
          pygame.quit()
          sys.exit()        
         
    pygame.display.update()
    FramePerSec.tick(FPS)
